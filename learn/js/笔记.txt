##常用函数
isNaN() // 判断是否为NaN 数字带引号都可以
parseFloat() // 转换为浮点数 第一个不是数字会返回NaN eg.100岁-》100
parseInt() // 转换为整数 第二个参数表示进制 eg.parseInt('110', 2) => 6  2进制

##window对象
window对象属性：
    document：当前页面的文档对象，可以用来操作页面的元素
    location：当前页面的URL信息，可以用来获取当前页面的URL、跳转页面等
        href：当前页面的URL
        reload()：重新加载当前页面=>刷新
        replace()：跳转 注意跳转地址用引号包裹 替换当前页面=>无历史记录
        assign()：加载新的页面=>有历史记录
    history：当前页面的历史记录，可以用来操作浏览器的前进、后退功能（编写时可不使用window前缀）
    name:设置或获取窗口的名称

##js事件（不熟悉的）
onkeydown：按下键盘按键时触发
onfocus：元素获得焦点时触发
onblur：元素失去焦点时触发

##表单验证
降低服务器压力，提升用户体验
所有表单项元素都value属性
常用：非空、长度、合法性
###表单元素
<form action="提交地址" method="get|post">
  <!-- 表单元素 -->
</form>
前判是否是null或undefined；后者用来判断是否是空字符串
if(name==null || name=="")
select\input等标签中加入name属性。没有该属性时，提交表单会忽略这个字段的值，后端服务器接收不到这个字段。
当用户填写表单并点击“提交”按钮时，表单会将所有有 name 的值，按照 name=value 的格式发送到服务器。


##正则表达式
eg.  var reg = /abc/i;
修饰符：
i：执行对大小写不敏感的匹配
g：执行全局匹配（找到所有匹配的结果）
m：多行匹配
模式：
[a-z]:查找方括号内的任何字符
[0-9]:查找数字
(x|y):查找任何以1分隔的选项
元字符：
\d：查找数字digit
\s:查找空白字符space
\b：查找单词边界boundary
\uxxxx：查找Unicode字符(16进制)
\. : 就是小数点
量词：
n+ ：匹配至少一个字符n （1及以上）
eg. let reg = /a+/;
"a"匹配   "aaa"匹配   ""不匹配
n* :匹配0或多个n  以上三个都匹配 （可多次）
n? :最多匹配1次 （有无）
^ : 匹配开头（字符作为开头）
$ : 匹配结尾
[\u4e00-\u9fa5] 匹配一个汉字字符 注意反斜杠
{2,4}：这个前面的元素出现至少2次，最多4次

##js案例
html：
    table中<tr>row <th>head <td>data
创建元素：
    document.createElement("标签名")
    添加元素属性:
    eg. var option = document.createElement("option");
    option.value = "值";
    option.text = "文本";
    添加到父元素下面：
    parent.appendChild(child);
    移除元素：
    parent.removeChild(child);

##http请求
XMLHttpRequest对象：
    创建对象：var xhr = new XMLHttpRequest();
    初始化请求：xhr.open("请求方式", "请求地址", 是否异步);
    eg. xhr.open("GET", "https://www.baidu.com");
    发送数据：xhr.send();
    请求成功完成并响应后触发： xhr.onload()
        xhr.onload = () => {
    if (xhr.status === 200) {
        console.log(xhr.response); // 处理成功响应
    } else {
        console.error(xhr.statusText); // 处理服务器错误
    }
    };

    // readyState 请求的当前状态
    //readyState === 4 ，===4说明响应完成
    //200 http相应状态码
    xhr.onreadystatechange  = function () {
    if (xhr.status === 200 && xhr.readyState === 4) {
        console.log('Success:', xhr.responseText);
    }
    };


